{{- range $index, $service := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ $index }}
  labels:
    {{ include "frontend.release_labels" $ | indent 4 }}
spec:
  replicas: {{ default 1 $service.replicas }}
  selector:
    matchLabels:
      {{ include "frontend.release_labels" $ | indent 6 }}
      deployment: frontend-{{ $index }}
  template:
    metadata:
      labels:
        {{ include "frontend.release_labels" $ | indent 8 }}
        deployment: frontend-{{ $index }}
    spec:
      enableServiceLinks: false
      containers:
      - name: {{ $index }}
        image: {{ $service.image | quote }}
        ports:
        - containerPort: {{ default $.Values.serviceDefaults.port $service.port }}
          name: {{ $index }}
        volumeMounts:
          {{ if $service.mounts }}
          {{- range $index, $mountName := $service.mounts -}}
          {{ $mount := (index $.Values.mounts $mountName) }}
          {{- if eq $mount.enabled true }}
          - name: frontend-{{ $mountName }}
            mountPath: {{ $mount.mountPath }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{ if $.Values.shell.enabled -}}
          - name: shell-keys
            mountPath: /etc/ssh/keys
          {{- end }}
        livenessProbe:
          tcpSocket:
            port: {{ default $.Values.serviceDefaults.port $service.port }}
        readinessProbe:
          tcpSocket:
            port: {{ default $.Values.serviceDefaults.port $service.port }}
        env:
        {{- range $key, $val := $service.env }}
        - name: {{ $key }}
          value: {{ $val | quote }}
        {{- end }}
        - name: 'PORT'
          value: {{ default $.Values.serviceDefaults.port $service.port | quote }}
        - name: 'ENVIRONMENT_DOMAIN'
          value: {{ template "frontend.domain" $ }}
        - name: 'RELEASE_NAME'
          value: {{ $.Release.Name | quote }}
        {{- range $index, $service := $.Values.services }}
        - name: "{{ $index }}_HOST"
          value: "{{ $.Release.Name }}-{{ $index }}:{{ default $.Values.serviceDefaults.port $service.port }}"
        {{- end }}
        {{- if $.Values.elasticsearch.enabled }}
        - name: ELASTICSEARCH_HOST
          value: {{ $.Release.Name }}-es
        {{- end }}
        {{- if $.Values.rabbitmq.enabled }}
        - name: RABBITMQ_HOST
          value: {{ $.Release.Name }}-rabbitmq
        {{- end }}
        {{ if $.Values.shell.enabled -}}
        - name: GITAUTH_API_TOKEN
          value: "{{ $.Values.shell.gitAuth.apiToken }}"
        - name: GITAUTH_REPOSITORY_URL
          value: "{{ $.Values.shell.gitAuth.repositoryUrl }}"
        {{- end }}
        resources:
          {{ if $service.resources -}}
          {{ merge $service.resources $.Values.serviceDefaults.resources | toYaml | nindent 10 }}
          {{ else -}}
          {{ $.Values.serviceDefaults.resources | toYaml | nindent 10 }}
          {{- end }}
      volumes:
        {{ if $service.mounts }}
        {{- range $index, $mountName := $service.mounts -}}
        {{ $mount := (index $.Values.mounts $mountName) }}
        {{- if eq $mount.enabled true }}
        - name: frontend-{{ $mountName }}
          persistentVolumeClaim:
            claimName: {{ $.Release.Name }}-{{ $mountName }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{ if $.Values.shell.enabled -}}
        - name: shell-keys
          persistentVolumeClaim:
            claimName: {{ $.Release.Name }}-shell-keys
        {{- end }}
      {{ if $service.nodeSelector -}}
      nodeSelector:
        {{- $service.nodeSelector | toYaml | nindent 8 }}
      tolerations:
        {{- include "frontend.tolerations" $service.nodeSelector | nindent 8 }}
      {{- end }}

{{- if $service.autoscaling }}
{{- if $service.autoscaling.enabled }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ $.Release.Name }}-{{ $index }}
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $.Release.Name }}-{{ $index }}
  minReplicas: {{ default $.Values.serviceDefaults.autoscaling.minReplicas $service.autoscaling.minReplicas }}
  maxReplicas: {{ default $.Values.serviceDefaults.autoscaling.maxReplicas $service.autoscaling.maxReplicas }}
  metrics:
    {{ if $service.autoscaling.metrics }}
    {{- toYaml $service.autoscaling.metrics | nindent 4 }}
    {{ else }}
    {{- toYaml $.Values.serviceDefaults.autoscaling.metrics | nindent 4 }}
    {{- end }}
{{- end }}
{{- end }}
---
{{- end }}
