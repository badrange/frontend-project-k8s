{{- $ingress := .Values.ingress.default }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-nginx
  annotations:
    kubernetes.io/ingress.class: {{ $ingress.type | quote }}
    {{- if $ingress.tls }}
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    {{- if eq $ingress.type "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http,https"
    {{- end }}
    {{- else }}
    {{- if eq $ingress.type "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http"
    {{- end }}
    {{- end }}

    {{- $redirect_https := false }}
    {{- if (hasKey $ingress "redirect-https") }}
    {{- $redirect_https = (index $ingress "redirect-https") }}
    {{- end }}
    {{- if not $ingress.tls }}
    {{- $redirect_https = false }}
    {{- end }}
    {{- if $redirect_https }}
    ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    {{- end }}
    
    {{- if eq $ingress.type "gce" }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- if $ingress.staticIpAddressName }}
    kubernetes.io/ingress.global-static-ip-name: {{ $ingress.staticIpAddressName | quote }}
    {{- end }}

    {{- if $ingress.extraAnnotations }}
    {{- $ingress.extraAnnotations | toYaml | nindent 4 }}
    {{- end }}

    {{- if (index .Values "silta-release").downscaler.enabled }}
    auto-downscale/last-update: {{ dateInZone "2006-01-02T15:04:05.999Z" (now) "UTC" }}
    auto-downscale/label-selector: "release={{ .Release.Name }}"
    auto-downscale/services: {{ .Release.Name }}-nginx
    {{- end }}
  labels:
    {{ include "frontend.release_labels" . | indent 4 }}
spec:
  {{- if $ingress.tls }}
  tls:
  - secretName: {{ .Release.Name }}-tls
  {{- range $index, $prefix := .Values.domainPrefixes }}
  - secretName: {{ $.Release.Name }}-tls-p{{ $index }}
  {{- end }}
  {{- end }}
  rules:
  - host: {{ template "frontend.domain" . }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Release.Name }}-nginx
          servicePort: 80
{{- range $index, $prefix := .Values.domainPrefixes }}
  - host: {{ $prefix }}.{{ template "frontend.domain" $ }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ $.Release.Name }}-nginx
          servicePort: 80
{{- end }}
---
# Ingresses for exposeDomains 
{{- range $ingress_index, $ingress := $.Values.ingress }}

{{- $ingress := mergeOverwrite (deepCopy $.Values.ingress.default) $ingress }}

{{- $ingress_in_use := false }}
{{- range $domain_index, $domain := $.Values.exposeDomains }}
  {{- $domain := mergeOverwrite (deepCopy $.Values.exposeDomainsDefaults) $domain }}
  {{- if $domain.ingress }}
    {{- if eq $ingress_index $domain.ingress }}
      {{- $ingress_in_use = true }}
    {{- end }}
  {{- end }}
{{- end }}

{{- if $ingress_in_use }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $.Release.Name }}-nginx-{{ $ingress_index }}
  annotations:
    kubernetes.io/ingress.class: {{ $ingress.type | quote }}
    {{- if $ingress.tls }}
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    {{- if eq $ingress.type "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http,https"
    {{- end }}
    {{- else }}
    {{- if eq $ingress.type "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http"
    {{- end }}
    {{- end }}
    
    {{- $redirect_https := false }}
    {{- if (hasKey $ingress "redirect-https") }}
    {{- $redirect_https = (index $ingress "redirect-https") }}
    {{- end }}
    {{- if not $ingress.tls }}
    {{- $redirect_https = false }}
    {{- end }}
    {{- if $redirect_https }}
    ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    {{- end }}
    
    {{- if eq $ingress.type "gce" }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- if $ingress.staticIpAddressName }}
    kubernetes.io/ingress.global-static-ip-name: {{ $ingress.staticIpAddressName | quote }}
    {{- end }}

    {{- if $ingress.extraAnnotations }}
    {{- $ingress.extraAnnotations | toYaml | nindent 4 }}
    {{- end }}
  labels:
    {{ include "frontend.release_labels" $ | indent 4 }}
spec:
  {{- if $ingress.tls }}
  tls:
  {{- range $domain_index, $domain := $.Values.exposeDomains }}
  {{- $domain := mergeOverwrite (deepCopy $.Values.exposeDomainsDefaults) $domain }}
  {{- if eq $domain.ingress $ingress_index }}
  {{- if $domain.ssl }}
  {{- if $domain.ssl.enabled }}
  - secretName: {{ $.Release.Name }}-tls-{{ $domain_index }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  rules:
  {{- range $domain_index, $domain := $.Values.exposeDomains }}
  {{- $domain := mergeOverwrite (deepCopy $.Values.exposeDomainsDefaults) $domain }}
  {{- if eq $domain.ingress $ingress_index }}
  - host: {{ $domain.hostname }}
    http:
      paths:
      - path: {{ if eq $ingress.type "gce" }}/*{{ else }}/{{ end }}
        backend:
          serviceName: {{ $.Release.Name }}-nginx
          servicePort: 80
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
