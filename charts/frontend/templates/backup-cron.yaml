{{- if .Values.backup.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-backup
  labels:
    cronjob-type: backup
spec:
  schedule: {{ .Values.backup.schedule | replace "~" (randNumeric 1) | quote }}
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 3600
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  suspend: false
  jobTemplate:
    spec:
      activeDeadlineSeconds: 7200
      backoffLimit: 2
      template:
        spec:
          enableServiceLinks: false
          initContainers:
            - name: backup-linking
              image: eu.gcr.io/silta-images/rsync:latest
              command: ["/bin/bash", "-c"]
              args:
                - |
                  {{- include "frontend.backup.create-destination-path" . | nindent 18 }}
              volumeMounts:
                {{- range $index, $mount := $.Values.mounts }}
                {{- if eq $mount.enabled true }}
                - name: frontend-{{ $index }}
                  mountPath: /values_mounts/{{ $index }}
                {{- end }}
                {{- end }}
                - name: {{ .Release.Name }}-backup
                  mountPath: /backup_archive
                - mountPath: /backups
                  name: shared-data
          containers:
          - name: backup
            image: eu.gcr.io/silta-images/rsync:latest
            volumeMounts:
              {{- range $index, $mount := $.Values.mounts -}}
              {{- if eq $mount.enabled true }}
              - name: frontend-{{ $index }}
                mountPath: /values_mounts/{{ $index }}
              {{- end }}
              {{- end }}
              - name: {{ $.Release.Name }}-backup
                mountPath: /backup_archive
              - mountPath: /backups
                name: shared-data
            command: ["/bin/bash", "-c"]
            args:
              - |
                {{- include "frontend.backup.copy-mounts" . | nindent 16 }}
                
                # Delete old backups
                echo "Removing backups older than {{ .Values.backup.retention }} days"
                find /backup_archive/ -mtime +{{ .Values.backup.retention }} -exec rm -r {} \;

          {{- range $index, $service := .Values.services }}
          {{- $backupCommand := "" }}
          {{- if (hasKey $service "backup") }}
          {{- if (hasKey $service.backup "command") }}
          {{- $backupCommand = $service.backup.command }}
          {{- end }}
          {{- end }}
          {{- if $backupCommand }}
          - name: {{ $index }}
            image: {{ $service.image | quote }}
            command: ["/bin/bash", "-c"]
            args:
              - |
                {{- $backupCommand | nindent 16 }}
            env:
            {{- include "services.env" (dict "Values" $.Values "Release" $.Release "service" $service) | nindent 12 }}
            {{- range $key, $val := $service.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            volumeMounts:
              - name: {{ $.Release.Name }}-backup
                mountPath: /backup_archive
              - mountPath: /backups
                name: shared-data
              {{ if $service.mounts }}
              {{- range $index, $mountName := $service.mounts -}}
              {{ $mount := (index $.Values.mounts $mountName) }}
              {{- if eq $mount.enabled true }}
              - name: frontend-{{ $mountName }}
                mountPath: {{ $mount.mountPath }}
              {{- end }}
              {{- end }}
              {{- end }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          volumes:
            - name: shared-data
              emptyDir:
                sizeLimit: 10M
            {{- range $index, $service := .Values.services }}
            {{- if $service.mounts -}}
            {{- range $index, $mountName := $service.mounts -}}
            {{ $mount := (index $.Values.mounts $mountName) }}
            {{- if eq $mount.enabled true }}
            - name: frontend-{{ $mountName }}
              persistentVolumeClaim:
                claimName: {{ $.Release.Name }}-{{ $mountName }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: {{ .Release.Name }}-backup
              persistentVolumeClaim:
                claimName: {{ .Release.Name }}-backup
{{- end }}
