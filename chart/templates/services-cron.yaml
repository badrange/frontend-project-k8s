{{- range $index, $job := .Values.cron }}
{{ $service := (index $.Values.services $job.service) }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ $.Release.Name }}-{{ $index }}
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  schedule: {{ $job.schedule | replace "~" (randNumeric 1) | quote }}
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 3600
  backOffLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "frontend.release_labels" $ | nindent 12 }}
        spec:
          containers:
          - name: {{ $index }}-cron
            image: {{ $service.image | quote }}
            env:
            {{- range $key, $val := $service.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            command: ["/bin/sh", "-c"]
            args:
              - |
                 set -ex
                 {{ $job.command | nindent 18 }}
            resources:
              {{ if $service.resources -}}
              {{ merge $service.resources $.Values.serviceDefaults.resources | toYaml | nindent 14 }}
              {{ else -}}
              {{ $.Values.serviceDefaults.resources | toYaml | nindent 14 }}
              {{- end }}
          restartPolicy: OnFailure
---
{{- end }}